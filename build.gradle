/*
 * Based on jruyi/thrift-gradle-plugin/../build.gradle
 * Modified 2023 LINE Corporation
 *
 * Copyright 2023 LINE Corporation
 *
 * LINE Corporation licenses this file to you under the Apache License,
 * version 2.0 (the "License"); you may not use this file except in compliance
 * with the License. You may obtain a copy of the License at:
 *
 *   https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
 * License for the specific language governing permissions and limitations
 * under the License.
 */

plugins {
    id 'checkstyle'
    id 'com.gradle.plugin-publish' version '1.2.0'
    id 'java-gradle-plugin'
}

group = 'com.linecorp.thrift-gradle-plugin'
version = System.getenv("PLUGIN_VERSION") ?: "0.5.0-SNAPSHOT"

repositories {
    mavenCentral()
}

dependencies {
    testImplementation "org.assertj:assertj-core:3.24.2"
    testImplementation "org.junit.jupiter:junit-jupiter:5.9.3"
    testImplementation "org.mockito:mockito-junit-jupiter:5.4.0"
    testImplementation "org.mockito.kotlin:mockito-kotlin:5.0.0"
}

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(8)
    }
}

def checkstyleConfigDir = rootProject.file('settings/checkstyle/')
checkstyle {
    configFile = new File(checkstyleConfigDir, 'checkstyle.xml')
    configProperties = ['checkstyleConfigDir': "$checkstyleConfigDir"]
    reportsDir = project.file('build/checkstyle')
    toolVersion = '10.12.1'
}

tasks.withType(Checkstyle).configureEach {
    javaLauncher = javaToolchains.launcherFor {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

// Test on multiple LTS versions to check if any API is removed in newer JDK.
def javaVersions = [11, 17]
javaVersions.each { version ->
    def testOnSpecificVersion = tasks.register("testsOn$version", Test) {
        testClassesDirs = testing.suites.test.sources.output.classesDirs
        classpath = testing.suites.test.sources.runtimeClasspath

        javaLauncher = javaToolchains.launcherFor {
            languageVersion = JavaLanguageVersion.of(version)
        }
    }
    tasks.named('check').configure {
        dependsOn(testOnSpecificVersion)
    }
}

tasks.withType(Test).configureEach {
    useJUnitPlatform()
}

gradlePlugin {
    website = 'https://github.com/line/thrift-gradle-plugin'
    vcsUrl = 'https://github.com/line/thrift-gradle-plugin'
    plugins {
        thriftGradlePlugin {
            id = 'com.linecorp.thrift-gradle-plugin'
            implementationClass = 'com.linecorp.thrift.plugin.ThriftPlugin'
            displayName = 'Gradle plugin for compiling Thrift IDL files'
            description = 'A gradle plugin for compiling Thrift IDL files using thrift compiler'
            tags.set(['thrift', 'code-generation'])
        }
    }
}
